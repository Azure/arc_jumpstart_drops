name: Build Drops JSON

on:
  push:
    paths:
      - 'drops/**'
      - '.github/workflows/build-drops-json.yaml'
  pull_request:
    paths:
      - 'drops/**'
      - '.github/workflows/build-drops-json.yaml'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-drops:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Create autogenerated directory
      run: |
        mkdir -p autogenerated
        echo "Created autogenerated directory"

    - name: Build comprehensive drops JSON
      run: |
        echo "Building comprehensive drops.json from all files in drops folder..."
        
        # Create a Node.js script to combine JSON files
        cat << 'EOF' > combine-json.js
        const fs = require('fs');
        const path = require('path');
        
        
        // Read all JSON files from drops directory
        const dropsDir = 'drops';
        const files = fs.readdirSync(dropsDir).filter(file => file.endsWith('.json'));
        
        console.log(`📁 Found ${files.length} JSON files`);
        
        const drops = [];
        let processedCount = 0;
        let skippedCount = 0;
        
        files.forEach(file => {
          const filePath = path.join(dropsDir, file);
          
          try {
            const content = fs.readFileSync(filePath, 'utf8');
            const jsonData = JSON.parse(content);
            drops.push(jsonData);
            processedCount++;
          } catch (error) {
            console.log(`   Warning: ${file} contains invalid JSON, skipping...`);
            console.log(`   Error: ${error.message}`);
            skippedCount++;
          }
        });
        
        // Write combined JSON
        try {
          fs.writeFileSync('autogenerated/drops.json', JSON.stringify(drops, null, 2));
          console.log(`Successfully created autogenerated/drops.json`);
          console.log(`Processed: ${processedCount} files`);
          console.log(`Skipped: ${skippedCount} files`);
          console.log(`Total drops: ${drops.length}`);
        } catch (error) {
          console.error(`Failed to write output file: ${error.message}`);
          process.exit(1);
        }
        EOF
        
        # Run the Node.js script
        node combine-json.js

    - name: Validate final JSON structure
      run: |
        echo "Validating final JSON structure..."
        
        # Create validation script
        cat << 'EOF' > validate-json.js
        const fs = require('fs');
        
        try {
          const content = fs.readFileSync('autogenerated/drops.json', 'utf8');
          const data = JSON.parse(content);
          
          console.log('Generated JSON is syntactically valid');
          
          if (Array.isArray(data)) {
            console.log('JSON is properly formatted as an array');
            process.exit(0);
          } else {
            console.log('JSON is not formatted as an array');
            process.exit(1);
          }
        } catch (error) {
          console.log(' Generated JSON is invalid');
          console.log(`Error: ${error.message}`);
          process.exit(1);
        }
        EOF
        
        node validate-json.js

    - name: Display comprehensive file info
      run: |
        echo "File Statistics:"
        echo "==================="
        echo "Generated file: autogenerated/drops.json"
        echo "File size: $(wc -c < autogenerated/drops.json | numfmt --to=iec-i --suffix=B)"
        echo "Files in drops folder: $(find drops -name "*.json" -type f | wc -l)"
        
        # Create stats script
        cat << 'EOF' > stats.js
        const fs = require('fs');
        
        try {
          const content = fs.readFileSync('autogenerated/drops.json', 'utf8');
          const data = JSON.parse(content);
          
          console.log(`Number of drops: ${data.length}`);
          if (data.length === 0) {
            console.log('No drops found');
          }
        } catch (error) {
          console.log('Error reading drops data');
        }
        EOF
        
        node stats.js

    - name: Check for changes and commit
      if: github.event_name == 'push'
      run: |
        echo "Checking for changes in autogenerated folder..."
        
        git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        
        # Check if there are changes
        if [ -n "$(git status --porcelain autogenerated/)" ]; then
          echo "Changes detected in autogenerated/drops.json"
          
          # Add and commit the changes 
          git add autogenerated/drops.json
          # Get drops count using Node.js
          DROPS_COUNT=$(node -e "const fs = require('fs'); const data = JSON.parse(fs.readFileSync('autogenerated/drops.json', 'utf8')); console.log(data.length);")
          
          git commit -m "Auto-update drops.json from drops folder
          - Updated: $(date -u +"%Y-%m-%d %H:%M:%S UTC")
          - Drops count: $DROPS_COUNT
          - Triggered by: ${{ github.event.head_commit.message || 'Manual trigger' }}
          [skip ci]"
          
          # Push the changes
          git push
          echo "Successfully committed and pushed updated drops.json"
        else
          echo "No changes detected in autogenerated/drops.json"
        fi

    - name: Summary
      run: |
        echo ""
        echo "Workflow Summary"
        echo "===================="
        echo "Successfully built autogenerated/drops.json"
        echo "Source: drops/ folder"
        echo "Output: autogenerated/drops.json"
        TOTAL_DROPS=$(node -e "const fs = require('fs'); const data = JSON.parse(fs.readFileSync('autogenerated/drops.json', 'utf8')); console.log(data.length);")
        echo "Total drops: $TOTAL_DROPS"
        echo "Trigger: ${{ github.event_name }}"
