name: Drop content validator

on:
  pull_request:
    types: [opened, synchronize, reopened, edited] 
    branches:
      - canary
  workflow_dispatch:

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20.9.0

    - name: Install dependencies
      #run: npm install .github/content-validator
      run: npm install node-fetch

    - name: Get the Drop schema json
      id: changed-files-specific
      uses: tj-actions/changed-files@v46

    - name: List changed JSON schema files
      if: steps.changed-files-specific.outputs.any_changed == 'true'
      env:
        ALL_CHANGED_FILES: ${{ steps.changed-files-specific.outputs.all_changed_files }}
      run: |
        echo "âœ… Success - List all the files that have changed: $ALL_CHANGED_FILES"

    - name : Check content
      if: steps.changed-files-specific.outputs.any_changed == 'true'
      env:
        ALL_CHANGED_FILES: ${{ steps.changed-files-specific.outputs.all_changed_files }}
      run: |

        ## Sanitize and validate file paths to prevent command injection
        sanitized_files=""
        
        # Read each file path and validate it
        while IFS= read -r file; do
          # Skip empty lines
          if [ -z "$file" ]; then
            continue
          fi
          
          # Remove any potentially dangerous characters and validate path
          clean_file=$(echo "$file" | sed 's/[;&|`$(){}[\]\\<>]//g' | tr -d '\r')
          
          # Only process files that exist and have valid extensions (case-insensitive)
          if [ -f "$clean_file" ] && [[ "$clean_file" =~ \.(json|JSON|md|MD|yaml|yml|YAML|YML|txt|TXT)$ ]]; then
            if [ -z "$sanitized_files" ]; then
              sanitized_files="$clean_file"
            else
              sanitized_files="$sanitized_files $clean_file"
            fi
          fi
        done <<< "$ALL_CHANGED_FILES"
        
        echo "Sanitized changed files: $sanitized_files"
        
        # Only proceed if we have valid files to process
        if [ -n "$sanitized_files" ]; then
          # Use array to safely pass arguments
          eval "set -- $sanitized_files"
          node ./.github/content-validator/validator.js "$@"
        else
          echo "No valid files to validate"
        fi
